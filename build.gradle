plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.7-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.onion'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	// Spring Boot Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'com.zaxxer:HikariCP:5.0.1'
	// elastic search
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Redis support
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// Spring Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Lombok (Compile time code generation)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JUnit 5 dependencies for testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Mockito for mocking in tests
	testImplementation 'org.mockito:mockito-core:4.6.1'  // Mockito core library
	testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'  // Mockito JUnit 5 support
}

tasks.named('test') {
	useJUnitPlatform()  // Ensure JUnit 5 is used for testing
}
